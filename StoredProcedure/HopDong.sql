CREATE OR REPLACE PROCEDURE USP_HOPDONG_GET_ALL_FOR_DUYETHS(P_RES OUT SYS_REFCURSOR)
AS
BEGIN
    OPEN P_RES FOR
        WITH HOPDONG_FILTERED AS (
            SELECT MAHOPDONG, CAPBACTD, VITRITD, NGAYTD, THOIGIANTD
            FROM HOPDONG
            WHERE (NGAYTD + THOIGIANTD) <= (SYSDATE + 50)
        ),
        HSUNGTUYEN_OF_HOPDONG AS (
            SELECT HSUT.MAHOPDONG, COUNT(HSUT.MAHOPDONG) AS SOLUONGHS
            FROM HSUNGTUYEN HSUT
            JOIN HOPDONG_FILTERED HD ON HSUT.MAHOPDONG = HD.MAHOPDONG
            WHERE HSUT.KETQUA >= 2 AND HSUT.KETQUA <= 4
            GROUP BY HSUT.MAHOPDONG
        )
        SELECT HD.MAHOPDONG, CB.MOTA AS CAPBACTD, VT.MOTA AS VITRITD, 
        HD.NGAYTD, HD.THOIGIANTD, HSUT.SOLUONGHS
        FROM HOPDONG_FILTERED HD
        JOIN HSUNGTUYEN_OF_HOPDONG HSUT ON HD.MAHOPDONG = HSUT.MAHOPDONG
        JOIN CAPBAC CB ON HD.CAPBACTD = CB.MACB
        JOIN VITRI VT ON HD.VITRITD = VT.MAVT;
END;
/
GRANT EXECUTE ON USP_HOPDONG_GET_ALL_FOR_DUYETHS TO RL_NHANVIEN;




CREATE OR REPLACE PROCEDURE USP_HOPDONG_GET_ALL_FOR_PHANHOIHS(P_RES OUT SYS_REFCURSOR)
AS
BEGIN
    OPEN P_RES FOR
        WITH HOPDONG_FILTERED AS (
            SELECT MAHOPDONG, CAPBACTD, VITRITD, NGAYTD, THOIGIANTD
            FROM HOPDONG
            WHERE (NGAYTD + THOIGIANTD) <= (SYSDATE + 50)
        ),
        HSUNGTUYEN_OF_HOPDONG AS (
            SELECT HSUT.MAHOPDONG, COUNT(HSUT.MAHOPDONG) AS SOLUONGHS
            FROM HSUNGTUYEN HSUT
            JOIN HOPDONG_FILTERED HD ON HSUT.MAHOPDONG = HD.MAHOPDONG
            WHERE HSUT.KETQUA >= 4 AND DOUUTIEN IS NOT NULL
            GROUP BY HSUT.MAHOPDONG
        )
        SELECT HD.MAHOPDONG, CB.MOTA AS CAPBACTD, VT.MOTA AS VITRITD, 
        HD.NGAYTD, HD.THOIGIANTD, HSUT.SOLUONGHS
        FROM HOPDONG_FILTERED HD
        JOIN HSUNGTUYEN_OF_HOPDONG HSUT ON HD.MAHOPDONG = HSUT.MAHOPDONG
        JOIN CAPBAC CB ON HD.CAPBACTD = CB.MACB
        JOIN VITRI VT ON HD.VITRITD = VT.MAVT;
END;
/
GRANT EXECUTE ON USP_HOPDONG_GET_ALL_FOR_PHANHOIHS TO RL_DOANHNGHIEP;




CREATE OR REPLACE PROCEDURE USP_HOPDONG_GET_TIEUCHIDN(
    P_RES OUT SYS_REFCURSOR,
    P_MAHOPDONG IN VARCHAR2
)
AS
BEGIN
    OPEN P_RES FOR
        SELECT YEUCAU
        FROM HOPDONG
        WHERE MAHOPDONG = P_MAHOPDONG;
END;
/
GRANT EXECUTE ON USP_HOPDONG_GET_TIEUCHIDN TO RL_NHANVIEN, RL_DOANHNGHIEP;


CREATE OR REPLACE PROCEDURE USP_HOPDONG_INSERT
(
    vCAPBACTD IN VARCHAR2,
    vVITRITD IN VARCHAR2,
    vKYNANG IN VARCHAR2,
    vSOLUONGTD IN NUMBER,
    vYEUCAU	IN NVARCHAR2,
    vHINHTHUC IN NVARCHAR2,
    vTHOIGIANTD IN NUMBER,
    vNGAYTD IN DATE
)
AS
    vUSER VARCHAR2(50):= SYS_CONTEXT('USERENV', 'SESSION_USER');
    vTONGTIEN INT := 0;
    pkMAHD VARCHAR2(10);
    vMAKN VARCHAR2(10);
    vMAHT VARCHAR2(10);
    
    CURSOR cKYNANG IS (
        SELECT REGEXP_SUBSTR(vKYNANG, '[^,]+', 1, level) AS parts
        FROM dual
        CONNECT BY REGEXP_SUBSTR(vKYNANG, '[^,]+', 1, level) IS NOT NULL
    );
    
    CURSOR cHINHTHUC IS (
        SELECT REGEXP_SUBSTR(vHINHTHUC, '[^,]+', 1, level) AS parts
        FROM dual
        CONNECT BY REGEXP_SUBSTR(vHINHTHUC, '[^,]+', 1, level) IS NOT NULL
    );
BEGIN
    SELECT TO_CHAR(COUNT(*) + 1) INTO pkMAHD
    FROM HOPDONG;
    
    pkMAHD := 'NV' || TO_CHAR(TO_NUMBER(SUBSTR(vUSER, -8))) || '_' || pkMAHD;
    
--    RAISE_APPLICATION_ERROR(-20001, pkMAHD);
    
    INSERT INTO HOPDONG(MAHOPDONG, MADN, CAPBACTD, VITRITD, SOLUONGTD, YEUCAU, THOIGIANTD, NGAYTD, NGAYLAP, TRANGTHAI, TONGTIEN, TIENCONLAI)
    VALUES(pkMAHD, vUSER, vCAPBACTD, vVITRITD, vSOLUONGTD, vYEUCAU, vTHOIGIANTD, vNGAYTD, SYSDATE, 0, 1, 1);
    
    SELECT SUM(CHIPHITD) + NVL(vTONGTIEN, 0) INTO vTONGTIEN
    FROM (
        SELECT CHIPHITD FROM CAPBAC WHERE MACB = vCAPBACTD 
        UNION ALL
        SELECT CHIPHITD FROM VITRI WHERE MAVT = vVITRITD
        );
        
    OPEN cKYNANG;
    LOOP
        FETCH cKYNANG INTO vMAKN;
        EXIT WHEN cKYNANG%NOTFOUND;
        
        SELECT CHIPHITD + NVL(vTONGTIEN, 0) INTO vTONGTIEN
        FROM KYNANG
        WHERE MAKN = vMAKN;
        
        INSERT INTO HOPDONG_KYNANG
        VALUES(pkMAHD, vMAKN);
        
    END LOOP;
    CLOSE cKYNANG;
   
    OPEN cHINHTHUC;
    LOOP
        FETCH cHINHTHUC INTO vMAHT;
        EXIT WHEN cHINHTHUC%NOTFOUND;
        
        SELECT CHIPHITD + NVL(vTONGTIEN, 0) INTO vTONGTIEN
        FROM HINHTHUC
        WHERE MAHT = vMAHT;
        
        INSERT INTO HINHTHUC_HOPDONG
        VALUES(pkMAHD, vMAHT);
        
    END LOOP;
    CLOSE cHINHTHUC;
    
    UPDATE HOPDONG
    SET TONGTIEN = vTONGTIEN, TIENCONLAI = vTONGTIEN
    WHERE MAHOPDONG = pkMAHD;
END;
/
GRANT EXECUTE ON USP_HOPDONG_INSERT TO RL_DOANHNGHIEP;


CREATE OR REPLACE PROCEDURE USP_FIND_HOPDONG_BY_MAHOPDONG(P_RES OUT SYS_REFCURSOR, vMAHOPDONG IN VARCHAR)
AS
BEGIN
    OPEN P_RES FOR
        SELECT TONGTIEN, TIENCONLAI, THOIGIANTD FROM HOPDONG
        WHERE MAHOPDONG = vMAHOPDONG;
END;
/
GRANT EXECUTE ON USP_FIND_HOPDONG_BY_MAHOPDONG TO RL_NHANVIEN;
